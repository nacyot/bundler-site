%h2 What is Bundler?

#intro
  %p
    Bundler maintains a consistent environment for ruby applications. It tracks 
    an application's code and the rubygems it needs to run, so that an application
    will always have the exact gems (and versions) that it needs to run.
  %p
    We designed bundler to make it easy to share your code across a number 
    of development, staging and production machines. Of course, you know how to 
    share your own application or gem: stick it on GitHub and clone it where you 
    need it. Bundler makes it easy to make sure that your application has the 
    dependencies it needs to start up and run without errors.

.bullet
  = link_to 'Learn More: Why Bundler exists', '/v1.3/rationale.html'
%h2#getting-started
  Getting Started

.contents
  .bullet
    .description
      Getting started with bundler is easy! Open a terminal window and run this command:
    :code
      $ gem install bundler

  .bullet
    .description
      Specify your dependencies in a Gemfile in your project's root:
    :code
      # lang: ruby
      source 'https://rubygems.org'
      gem 'nokogiri'
      gem 'rack', '~>1.1'
      gem 'rspec', :require => 'spec'
    = link_to 'Learn More: Gemfiles', '/v1.3/gemfile.html'

  .bullet
    .description
      Install all of the required gems from your specified sources:
    :code
      $ bundle install
      $ git add Gemfile Gemfile.lock
    = link_to 'Learn More: bundle install', '/v1.3/bundle_install.html'
    .notes
      The second command adds the Gemfile and Gemfile.lock to your repository. This ensures
      that other developers on your app, as well as your deployment environment, will all use
      the same third-party code that you are using now.

  .bullet
    .description
      Inside your app, load up the bundled environment:
    :code
      # lang: ruby
      require 'rubygems'
      require 'bundler/setup'

      # require your gems as usual
      require 'nokogiri'
    = link_to 'Learn More: Bundler.setup', '/v1.3/bundler_setup.html'
  .bullet
    .description
      Run an executable that comes with a gem in your bundle:
    :code
      $ bundle exec rspec spec/models
    .notes
      %p
        In some cases, running executables without <code>bundle exec</code>
        may work, if the executable happens to be installed in your system
        and does not pull in any gems that conflict with your bundle.
      %p
        However, this is unreliable and is the source of considerable pain.
        Even if it looks like it works, it may not work in the future or
        on another machine.

    .description
      Finally, if you want a way to get a shortcut to gems in your bundle:
    :code
      $ bundle install --binstubs
      $ bin/rspec spec/models
    .notes
      The executables installed into <code>bin</code> are scoped to the
      bundle, and will always work.
    = link_to 'Learn More: Executables', '/v1.3/man/bundle-exec.1.html'

%h2#use-bundler Use Bundler with
.buttons
  = link_to 'Rails 3', '/v1.3/rails3.html'
  = link_to 'Rails 2.3', '/v1.3/rails23.html'
  = link_to 'Sinatra', '/v1.3/sinatra.html'
  = link_to 'RubyGems', '/v1.3/rubygems.html'
  = link_to 'RubyMotion', '/v1.3/rubymotion.html'

%h2#get-involved Get involved
%p Bundler has a lot of contributors and users, and they all talk to each other quite a bit. If you have questions, try the IRC channel or mailing list. If you're interested in contributing to the project (no programming skills needed), read the contributing guide. If you have sponsorship or security questions, please contact the core team directly.
.buttons
  = link_to '#bundler on IRC', 'http://webchat.freenode.net/?channels=bundler'
  = link_to 'Mailing list', 'http://groups.google.com/group/ruby-bundler'
  = link_to 'Contributing', 'https://github.com/bundler/bundler/blob/master/DEVELOPMENT.md'
  = link_to 'Core team', 'mailto:andre.arko+terence.lee@gmail.com'
